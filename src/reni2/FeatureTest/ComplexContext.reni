systemdata:
	{
	Memory: 
		((0 type *(125)) mutable) instance();

	!(mutable public) FreePointer: 
		Memory array_reference mutable;
	};

system:
	{
	!public NewMemory: 
		@
		{
		!public result:
			(((^ elementType) * 1) array_reference mutable)
				instance(systemdata FreePointer enable_reinterpretation).

		initializer: 
			^ initializer.

			result(0) := initializer(0).
			result(1) := initializer(1).
		}
		result
	};

Text: 
	@
	{
	value: 
		^.

	!public result:
		{
		!mix_in: 
			data(^) := new_value @ data(^).

   		this: 
			@! ^^.

		!public count:	
			^ count.

		!public data: 
			system 
				NewMemory
				(
				elementType: 
					value(0) type.
				count: 
					value count.
				initializer: 
					@ value(^)
				).

		!public dump_print: 
			@!
			{
				data(0) dump_print,
				data(1) dump_print,
			}.

		!public << : 
			@ concat(count: ^ count, data: ^).

		concat: 
			@ Text
			(
			other: 
				^;

			count: 
				this count + other count;

			!mix_in: 
				@ ^ < this count
				then this data(^ enable_cut)
				else other data((^ - this count)enable_cut);        
			)
		}
	}
	result;

dummy: 
	'123456789';

(Text ('H') << 'allo' )dump_print

