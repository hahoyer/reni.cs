systemdata:
    {
    Memory: 
        ((0 type *(125)) !mutable) instance();

    FreePointer !(mutable, public) : 
        Memory array_reference mutable;
    };

system:
    {
    NewMemory!public : 
        @
        {
        result!public :
            (((^ elementType) * 1) array_reference mutable)
                instance(systemdata FreePointer enable_reinterpretation).

        initializer: 
            ^ initializer.

            result(0) := initializer(0).
            result(1) := initializer(1).
        }
        result
    };

Text: 
    @
    {
    value: 
        ^.

    result!public :
        {
        
        (	data(^) := new_value @ data(^))!mix_in.

        this: 
            @! ^^.

        count!public :	
            ^ count.

        data!public : 
            system 
                NewMemory
                (
                elementType: 
                    value(0) type.
                count: 
                    value count.
                initializer: 
                    @ value(^)
                ).

        dump_print!public : 
            @!
            {
                data(0) dump_print,
                data(1) dump_print,
            }.

        << !public : 
            @ concat(count: ^ count, data: ^).

        concat: 
            @ Text
            (
            other: 
                ^;

            count: 
                this count + other count;

             
                (@ ^ < this count
                then this data(^ !enable_cut)
                else other data((^ - this count)enable_cut))!mix_in;        
            )
        }
    }
    result;

dummy: 
    '123456789';

(Text ('H') << 'allo' )dump_print

